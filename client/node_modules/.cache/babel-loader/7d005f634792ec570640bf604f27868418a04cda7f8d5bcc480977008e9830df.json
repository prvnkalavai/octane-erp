{"ast":null,"code":"/**\r\n * Copyright 2024 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * this module contains type-definitions and Type-Guards\r\n */\n\n// Type-definitions\n\n/* outgoing types */\n\n/**\r\n * the config to initiate the session\r\n */\n\n/** Incoming types */\n\n/**\r\n * A `toolCall` message\r\n */\n\n/** log types */\n\n// Type-Guards\n\nconst prop = (a, prop, kind = \"object\") => typeof a === \"object\" && typeof a[prop] === \"object\";\n\n// outgoing messages\nexport const isSetupMessage = a => prop(a, \"setup\");\nexport const isClientContentMessage = a => prop(a, \"clientContent\");\nexport const isRealtimeInputMessage = a => prop(a, \"realtimeInput\");\nexport const isToolResponseMessage = a => prop(a, \"toolResponse\");\n\n// incoming messages\nexport const isSetupCompleteMessage = a => prop(a, \"setupComplete\");\nexport const isServerContenteMessage = a => prop(a, \"serverContent\");\nexport const isToolCallMessage = a => prop(a, \"toolCall\");\nexport const isToolCallCancellationMessage = a => prop(a, \"toolCallCancellation\") && isToolCallCancellation(a.toolCallCancellation);\nexport const isModelTurn = a => typeof a.modelTurn === \"object\";\nexport const isTurnComplete = a => typeof a.turnComplete === \"boolean\";\nexport const isInterrupted = a => a.interrupted;\nexport function isToolCall(value) {\n  if (!value || typeof value !== \"object\") return false;\n  const candidate = value;\n  return Array.isArray(candidate.functionCalls) && candidate.functionCalls.every(call => isLiveFunctionCall(call));\n}\nexport function isToolResponse(value) {\n  if (!value || typeof value !== \"object\") return false;\n  const candidate = value;\n  return Array.isArray(candidate.functionResponses) && candidate.functionResponses.every(resp => isLiveFunctionResponse(resp));\n}\nexport function isLiveFunctionCall(value) {\n  if (!value || typeof value !== \"object\") return false;\n  const candidate = value;\n  return typeof candidate.name === \"string\" && typeof candidate.id === \"string\" && typeof candidate.args === \"object\" && candidate.args !== null;\n}\nexport function isLiveFunctionResponse(value) {\n  if (!value || typeof value !== \"object\") return false;\n  const candidate = value;\n  return typeof candidate.response === \"object\" && typeof candidate.id === \"string\";\n}\nexport const isToolCallCancellation = a => typeof a === \"object\" && Array.isArray(a.ids);","map":{"version":3,"names":["prop","a","kind","isSetupMessage","isClientContentMessage","isRealtimeInputMessage","isToolResponseMessage","isSetupCompleteMessage","isServerContenteMessage","isToolCallMessage","isToolCallCancellationMessage","isToolCallCancellation","toolCallCancellation","isModelTurn","modelTurn","isTurnComplete","turnComplete","isInterrupted","interrupted","isToolCall","value","candidate","Array","isArray","functionCalls","every","call","isLiveFunctionCall","isToolResponse","functionResponses","resp","isLiveFunctionResponse","name","id","args","response","ids"],"sources":["C:/Users/prave/Repos/octane-erp/src/multimodal-live-types.ts"],"sourcesContent":["/**\r\n * Copyright 2024 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport type {\r\n  Content,\r\n  FunctionCall,\r\n  GenerationConfig,\r\n  GenerativeContentBlob,\r\n  Part,\r\n  Tool,\r\n} from \"@google/generative-ai\";\r\n\r\n/**\r\n * this module contains type-definitions and Type-Guards\r\n */\r\n\r\n// Type-definitions\r\n\r\n/* outgoing types */\r\n\r\n/**\r\n * the config to initiate the session\r\n */\r\nexport type LiveConfig = {\r\n  model: string;\r\n  systemInstruction?: { parts: Part[] };\r\n  generationConfig?: Partial<LiveGenerationConfig>;\r\n  tools?: Array<Tool | { googleSearch: {} } | { codeExecution: {} }>;\r\n};\r\n\r\nexport type LiveGenerationConfig = GenerationConfig & {\r\n  responseModalities: \"text\" | \"audio\" | \"image\";\r\n  speechConfig?: {\r\n    voiceConfig?: {\r\n      prebuiltVoiceConfig?: {\r\n        voiceName: \"Puck\" | \"Charon\" | \"Kore\" | \"Fenrir\" | \"Aoede\" | string;\r\n      };\r\n    };\r\n  };\r\n};\r\n\r\nexport type LiveOutgoingMessage =\r\n  | SetupMessage\r\n  | ClientContentMessage\r\n  | RealtimeInputMessage\r\n  | ToolResponseMessage;\r\n\r\nexport type SetupMessage = {\r\n  setup: LiveConfig;\r\n};\r\n\r\nexport type ClientContentMessage = {\r\n  clientContent: {\r\n    turns: Content[];\r\n    turnComplete: boolean;\r\n  };\r\n};\r\n\r\nexport type RealtimeInputMessage = {\r\n  realtimeInput: {\r\n    mediaChunks: GenerativeContentBlob[];\r\n  };\r\n};\r\n\r\nexport type ToolResponseMessage = {\r\n  toolResponse: {\r\n    functionResponses: LiveFunctionResponse[];\r\n  };\r\n};\r\n\r\nexport type ToolResponse = ToolResponseMessage[\"toolResponse\"];\r\n\r\nexport type LiveFunctionResponse = {\r\n  response: object;\r\n  id: string;\r\n};\r\n\r\n/** Incoming types */\r\n\r\nexport type LiveIncomingMessage =\r\n  | ToolCallCancellationMessage\r\n  | ToolCallMessage\r\n  | ServerContentMessage\r\n  | SetupCompleteMessage;\r\n\r\nexport type SetupCompleteMessage = { setupComplete: {} };\r\n\r\nexport type ServerContentMessage = {\r\n  serverContent: ServerContent;\r\n};\r\n\r\nexport type ServerContent = ModelTurn | TurnComplete | Interrupted;\r\n\r\nexport type ModelTurn = {\r\n  modelTurn: {\r\n    parts: Part[];\r\n  };\r\n};\r\n\r\nexport type TurnComplete = { turnComplete: boolean };\r\n\r\nexport type Interrupted = { interrupted: true };\r\n\r\nexport type ToolCallCancellationMessage = {\r\n  toolCallCancellation: {\r\n    ids: string[];\r\n  };\r\n};\r\n\r\nexport type ToolCallCancellation =\r\n  ToolCallCancellationMessage[\"toolCallCancellation\"];\r\n\r\nexport type ToolCallMessage = {\r\n  toolCall: ToolCall;\r\n};\r\n\r\nexport type LiveFunctionCall = FunctionCall & {\r\n  id: string;\r\n};\r\n\r\n/**\r\n * A `toolCall` message\r\n */\r\nexport type ToolCall = {\r\n  functionCalls: LiveFunctionCall[];\r\n};\r\n\r\n/** log types */\r\nexport type StreamingLog = {\r\n  date: Date;\r\n  type: string;\r\n  count?: number;\r\n  message: string | LiveOutgoingMessage | LiveIncomingMessage;\r\n};\r\n\r\n// Type-Guards\r\n\r\nconst prop = (a: any, prop: string, kind: string = \"object\") =>\r\n  typeof a === \"object\" && typeof a[prop] === \"object\";\r\n\r\n// outgoing messages\r\nexport const isSetupMessage = (a: unknown): a is SetupMessage =>\r\n  prop(a, \"setup\");\r\n\r\nexport const isClientContentMessage = (a: unknown): a is ClientContentMessage =>\r\n  prop(a, \"clientContent\");\r\n\r\nexport const isRealtimeInputMessage = (a: unknown): a is RealtimeInputMessage =>\r\n  prop(a, \"realtimeInput\");\r\n\r\nexport const isToolResponseMessage = (a: unknown): a is ToolResponseMessage =>\r\n  prop(a, \"toolResponse\");\r\n\r\n// incoming messages\r\nexport const isSetupCompleteMessage = (a: unknown): a is SetupCompleteMessage =>\r\n  prop(a, \"setupComplete\");\r\n\r\nexport const isServerContenteMessage = (a: any): a is ServerContentMessage =>\r\n  prop(a, \"serverContent\");\r\n\r\nexport const isToolCallMessage = (a: any): a is ToolCallMessage =>\r\n  prop(a, \"toolCall\");\r\n\r\nexport const isToolCallCancellationMessage = (\r\n  a: unknown,\r\n): a is ToolCallCancellationMessage =>\r\n  prop(a, \"toolCallCancellation\") &&\r\n  isToolCallCancellation((a as any).toolCallCancellation);\r\n\r\nexport const isModelTurn = (a: any): a is ModelTurn =>\r\n  typeof (a as ModelTurn).modelTurn === \"object\";\r\n\r\nexport const isTurnComplete = (a: any): a is TurnComplete =>\r\n  typeof (a as TurnComplete).turnComplete === \"boolean\";\r\n\r\nexport const isInterrupted = (a: any): a is Interrupted =>\r\n  (a as Interrupted).interrupted;\r\n\r\nexport function isToolCall(value: unknown): value is ToolCall {\r\n  if (!value || typeof value !== \"object\") return false;\r\n\r\n  const candidate = value as Record<string, unknown>;\r\n\r\n  return (\r\n    Array.isArray(candidate.functionCalls) &&\r\n    candidate.functionCalls.every((call) => isLiveFunctionCall(call))\r\n  );\r\n}\r\n\r\nexport function isToolResponse(value: unknown): value is ToolResponse {\r\n  if (!value || typeof value !== \"object\") return false;\r\n\r\n  const candidate = value as Record<string, unknown>;\r\n\r\n  return (\r\n    Array.isArray(candidate.functionResponses) &&\r\n    candidate.functionResponses.every((resp) => isLiveFunctionResponse(resp))\r\n  );\r\n}\r\n\r\nexport function isLiveFunctionCall(value: unknown): value is LiveFunctionCall {\r\n  if (!value || typeof value !== \"object\") return false;\r\n\r\n  const candidate = value as Record<string, unknown>;\r\n\r\n  return (\r\n    typeof candidate.name === \"string\" &&\r\n    typeof candidate.id === \"string\" &&\r\n    typeof candidate.args === \"object\" &&\r\n    candidate.args !== null\r\n  );\r\n}\r\n\r\nexport function isLiveFunctionResponse(\r\n  value: unknown,\r\n): value is LiveFunctionResponse {\r\n  if (!value || typeof value !== \"object\") return false;\r\n\r\n  const candidate = value as Record<string, unknown>;\r\n\r\n  return (\r\n    typeof candidate.response === \"object\" && typeof candidate.id === \"string\"\r\n  );\r\n}\r\n\r\nexport const isToolCallCancellation = (\r\n  a: unknown,\r\n): a is ToolCallCancellationMessage[\"toolCallCancellation\"] =>\r\n  typeof a === \"object\" && Array.isArray((a as any).ids);\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}