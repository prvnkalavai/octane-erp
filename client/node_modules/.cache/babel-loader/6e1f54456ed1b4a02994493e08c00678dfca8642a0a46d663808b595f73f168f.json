{"ast":null,"code":"import { signalRefOrValue } from './compile/common';\nimport { hasProperty, keys } from './util';\nexport function isExprRef(o) {\n  return hasProperty(o, 'expr');\n}\nexport function replaceExprRef(index, {\n  level\n} = {\n  level: 0\n}) {\n  const props = keys(index || {});\n  const newIndex = {};\n  for (const prop of props) {\n    newIndex[prop] = level === 0 ? signalRefOrValue(index[prop]) : replaceExprRef(index[prop], {\n      level: level - 1\n    });\n  }\n  return newIndex;\n}","map":{"version":3,"names":["signalRefOrValue","hasProperty","keys","isExprRef","o","replaceExprRef","index","level","props","newIndex","prop"],"sources":["C:\\Users\\prave\\Repos\\octane-erp\\node_modules\\vega-lite\\src\\expr.ts"],"sourcesContent":["import {signalRefOrValue} from './compile/common';\nimport {Dict, hasProperty, keys} from './util';\nimport {MappedExclude} from './vega.schema';\n\nexport interface ExprRef {\n  /**\n   * Vega expression (which can refer to Vega-Lite parameters).\n   */\n  expr: string;\n}\n\nexport function isExprRef(o: any): o is ExprRef {\n  return hasProperty(o, 'expr');\n}\n\nexport function replaceExprRef<T extends Dict<any>>(index: T, {level}: {level: number} = {level: 0}) {\n  const props = keys(index || {});\n  const newIndex: Dict<any> = {};\n  for (const prop of props) {\n    newIndex[prop] = level === 0 ? signalRefOrValue(index[prop]) : replaceExprRef(index[prop], {level: level - 1});\n  }\n  return newIndex as MappedExclude<T, ExprRef>;\n}\n"],"mappings":"AAAA,SAAQA,gBAAgB,QAAO,kBAAkB;AACjD,SAAcC,WAAW,EAAEC,IAAI,QAAO,QAAQ;AAU9C,OAAM,SAAUC,SAASA,CAACC,CAAM;EAC9B,OAAOH,WAAW,CAACG,CAAC,EAAE,MAAM,CAAC;AAC/B;AAEA,OAAM,SAAUC,cAAcA,CAAsBC,KAAQ,EAAE;EAACC;AAAK,IAAqB;EAACA,KAAK,EAAE;AAAC,CAAC;EACjG,MAAMC,KAAK,GAAGN,IAAI,CAACI,KAAK,IAAI,EAAE,CAAC;EAC/B,MAAMG,QAAQ,GAAc,EAAE;EAC9B,KAAK,MAAMC,IAAI,IAAIF,KAAK,EAAE;IACxBC,QAAQ,CAACC,IAAI,CAAC,GAAGH,KAAK,KAAK,CAAC,GAAGP,gBAAgB,CAACM,KAAK,CAACI,IAAI,CAAC,CAAC,GAAGL,cAAc,CAACC,KAAK,CAACI,IAAI,CAAC,EAAE;MAACH,KAAK,EAAEA,KAAK,GAAG;IAAC,CAAC,CAAC;EAChH;EACA,OAAOE,QAAqC;AAC9C","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}