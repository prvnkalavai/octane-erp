{"ast":null,"code":"/**\r\n * Copyright 2024 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\n/**\r\n * A registry to map attached worklets by their audio-context\r\n * any module using `audioContext.audioWorklet.addModule(` should register the worklet here\r\n */\n\nexport const registeredWorklets = new Map();\nexport const createWorketFromSrc = (workletName, workletSrc) => {\n  const script = new Blob([`registerProcessor(\"${workletName}\", ${workletSrc})`], {\n    type: \"application/javascript\"\n  });\n  return URL.createObjectURL(script);\n};","map":{"version":3,"names":["registeredWorklets","Map","createWorketFromSrc","workletName","workletSrc","script","Blob","type","URL","createObjectURL"],"sources":["C:/Users/prave/Repos/octane-erp/client/src/lib/audioworklet-registry.ts"],"sourcesContent":["/**\r\n * Copyright 2024 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\n/**\r\n * A registry to map attached worklets by their audio-context\r\n * any module using `audioContext.audioWorklet.addModule(` should register the worklet here\r\n */\r\nexport type WorkletGraph = {\r\n  node?: AudioWorkletNode;\r\n  handlers: Array<(this: MessagePort, ev: MessageEvent) => any>;\r\n};\r\n\r\nexport const registeredWorklets: Map<\r\n  AudioContext,\r\n  Record<string, WorkletGraph>\r\n> = new Map();\r\n\r\nexport const createWorketFromSrc = (\r\n  workletName: string,\r\n  workletSrc: string,\r\n) => {\r\n  const script = new Blob(\r\n    [`registerProcessor(\"${workletName}\", ${workletSrc})`],\r\n    {\r\n      type: \"application/javascript\",\r\n    },\r\n  );\r\n\r\n  return URL.createObjectURL(script);\r\n};\r\n"],"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAMA,OAAO,MAAMA,kBAGZ,GAAG,IAAIC,GAAG,CAAC,CAAC;AAEb,OAAO,MAAMC,mBAAmB,GAAGA,CACjCC,WAAmB,EACnBC,UAAkB,KACf;EACH,MAAMC,MAAM,GAAG,IAAIC,IAAI,CACrB,CAAC,sBAAsBH,WAAW,MAAMC,UAAU,GAAG,CAAC,EACtD;IACEG,IAAI,EAAE;EACR,CACF,CAAC;EAED,OAAOC,GAAG,CAACC,eAAe,CAACJ,MAAM,CAAC;AACpC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}