{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\prave\\\\Repos\\\\octane-erp\\\\src\\\\App.tsx\",\n  _s = $RefreshSig$();\n/**\r\n * Copyright 2024 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\n\nimport { useRef, useState } from \"react\";\nimport \"./App.scss\";\nimport { LiveAPIProvider } from \"./contexts/LiveAPIContext\";\nimport SidePanel from \"./components/side-panel/SidePanel\";\nimport { Altair } from \"./components/altair/Altair\";\nimport ControlTray from \"./components/control-tray/ControlTray\";\nimport cn from \"classnames\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY;\nif (typeof API_KEY !== \"string\") {\n  throw new Error(\"set REACT_APP_GEMINI_APIK_KEY in .env\");\n}\nconst host = \"generativelanguage.googleapis.com\";\nconst uri = `wss://${host}/ws/google.ai.generativelanguage.v1alpha.GenerativeService.BidiGenerateContent`;\nfunction App() {\n  _s();\n  // this video reference is used for displaying the active stream, whether that is the webcam or screen capture\n  // feel free to style as you see fit\n  const videoRef = useRef(null);\n  // either the screen capture, the video or null, if null we hide it\n  const [videoStream, setVideoStream] = useState(null);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: /*#__PURE__*/_jsxDEV(LiveAPIProvider, {\n      url: uri,\n      apiKey: API_KEY,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"streaming-console\",\n        children: [/*#__PURE__*/_jsxDEV(SidePanel, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"main\", {\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"main-app-area\",\n            children: [/*#__PURE__*/_jsxDEV(Altair, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(\"video\", {\n              className: cn(\"stream\", {\n                hidden: !videoRef.current || !videoStream\n              }),\n              ref: videoRef,\n              autoPlay: true,\n              playsInline: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(ControlTray, {\n            videoRef: videoRef,\n            supportsVideo: true,\n            onVideoStreamChange: setVideoStream\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n_s(App, \"68EFFHm+Lmiu0bBLTNGjj3B4gT0=\");\n_c = App;\nexport default App;\nvar _c;\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useRef","useState","LiveAPIProvider","SidePanel","Altair","ControlTray","cn","jsxDEV","_jsxDEV","API_KEY","process","env","REACT_APP_GEMINI_API_KEY","Error","host","uri","App","_s","videoRef","videoStream","setVideoStream","className","children","url","apiKey","fileName","_jsxFileName","lineNumber","columnNumber","hidden","current","ref","autoPlay","playsInline","supportsVideo","onVideoStreamChange","_c","$RefreshReg$"],"sources":["C:/Users/prave/Repos/octane-erp/src/App.tsx"],"sourcesContent":["/**\r\n * Copyright 2024 Google LLC\r\n *\r\n * Licensed under the Apache License, Version 2.0 (the \"License\");\r\n * you may not use this file except in compliance with the License.\r\n * You may obtain a copy of the License at\r\n *\r\n *     http://www.apache.org/licenses/LICENSE-2.0\r\n *\r\n * Unless required by applicable law or agreed to in writing, software\r\n * distributed under the License is distributed on an \"AS IS\" BASIS,\r\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\r\n * See the License for the specific language governing permissions and\r\n * limitations under the License.\r\n */\r\n\r\nimport { useRef, useState } from \"react\";\r\nimport \"./App.scss\";\r\nimport { LiveAPIProvider } from \"./contexts/LiveAPIContext\";\r\nimport SidePanel from \"./components/side-panel/SidePanel\";\r\nimport { Altair } from \"./components/altair/Altair\";\r\nimport ControlTray from \"./components/control-tray/ControlTray\";\r\nimport cn from \"classnames\";\r\n\r\nconst API_KEY = process.env.REACT_APP_GEMINI_API_KEY as string;\r\nif (typeof API_KEY !== \"string\") {\r\n  throw new Error(\"set REACT_APP_GEMINI_APIK_KEY in .env\");\r\n}\r\n\r\nconst host = \"generativelanguage.googleapis.com\";\r\nconst uri = `wss://${host}/ws/google.ai.generativelanguage.v1alpha.GenerativeService.BidiGenerateContent`;\r\n\r\nfunction App() {\r\n  // this video reference is used for displaying the active stream, whether that is the webcam or screen capture\r\n  // feel free to style as you see fit\r\n  const videoRef = useRef<HTMLVideoElement>(null);\r\n  // either the screen capture, the video or null, if null we hide it\r\n  const [videoStream, setVideoStream] = useState<MediaStream | null>(null);\r\n\r\n  return (\r\n    <div className=\"App\">\r\n      <LiveAPIProvider url={uri} apiKey={API_KEY}>\r\n        <div className=\"streaming-console\">\r\n          <SidePanel />\r\n          <main>\r\n            <div className=\"main-app-area\">\r\n              {/* APP goes here */}\r\n              <Altair />\r\n              <video\r\n                className={cn(\"stream\", {\r\n                  hidden: !videoRef.current || !videoStream,\r\n                })}\r\n                ref={videoRef}\r\n                autoPlay\r\n                playsInline\r\n              />\r\n            </div>\r\n\r\n            <ControlTray\r\n              videoRef={videoRef}\r\n              supportsVideo={true}\r\n              onVideoStreamChange={setVideoStream}\r\n            >\r\n              {/* put your own buttons here */}\r\n            </ControlTray>\r\n          </main>\r\n        </div>\r\n      </LiveAPIProvider>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default App;\r\n"],"mappings":";;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA,SAASA,MAAM,EAAEC,QAAQ,QAAQ,OAAO;AACxC,OAAO,YAAY;AACnB,SAASC,eAAe,QAAQ,2BAA2B;AAC3D,OAAOC,SAAS,MAAM,mCAAmC;AACzD,SAASC,MAAM,QAAQ,4BAA4B;AACnD,OAAOC,WAAW,MAAM,uCAAuC;AAC/D,OAAOC,EAAE,MAAM,YAAY;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAE5B,MAAMC,OAAO,GAAGC,OAAO,CAACC,GAAG,CAACC,wBAAkC;AAC9D,IAAI,OAAOH,OAAO,KAAK,QAAQ,EAAE;EAC/B,MAAM,IAAII,KAAK,CAAC,uCAAuC,CAAC;AAC1D;AAEA,MAAMC,IAAI,GAAG,mCAAmC;AAChD,MAAMC,GAAG,GAAG,SAASD,IAAI,gFAAgF;AAEzG,SAASE,GAAGA,CAAA,EAAG;EAAAC,EAAA;EACb;EACA;EACA,MAAMC,QAAQ,GAAGlB,MAAM,CAAmB,IAAI,CAAC;EAC/C;EACA,MAAM,CAACmB,WAAW,EAAEC,cAAc,CAAC,GAAGnB,QAAQ,CAAqB,IAAI,CAAC;EAExE,oBACEO,OAAA;IAAKa,SAAS,EAAC,KAAK;IAAAC,QAAA,eAClBd,OAAA,CAACN,eAAe;MAACqB,GAAG,EAAER,GAAI;MAACS,MAAM,EAAEf,OAAQ;MAAAa,QAAA,eACzCd,OAAA;QAAKa,SAAS,EAAC,mBAAmB;QAAAC,QAAA,gBAChCd,OAAA,CAACL,SAAS;UAAAsB,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAAE,CAAC,eACbpB,OAAA;UAAAc,QAAA,gBACEd,OAAA;YAAKa,SAAS,EAAC,eAAe;YAAAC,QAAA,gBAE5Bd,OAAA,CAACJ,MAAM;cAAAqB,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OAAE,CAAC,eACVpB,OAAA;cACEa,SAAS,EAAEf,EAAE,CAAC,QAAQ,EAAE;gBACtBuB,MAAM,EAAE,CAACX,QAAQ,CAACY,OAAO,IAAI,CAACX;cAChC,CAAC,CAAE;cACHY,GAAG,EAAEb,QAAS;cACdc,QAAQ;cACRC,WAAW;YAAA;cAAAR,QAAA,EAAAC,YAAA;cAAAC,UAAA;cAAAC,YAAA;YAAA,OACZ,CAAC;UAAA;YAAAH,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OACC,CAAC,eAENpB,OAAA,CAACH,WAAW;YACVa,QAAQ,EAAEA,QAAS;YACnBgB,aAAa,EAAE,IAAK;YACpBC,mBAAmB,EAAEf;UAAe;YAAAK,QAAA,EAAAC,YAAA;YAAAC,UAAA;YAAAC,YAAA;UAAA,OAGzB,CAAC;QAAA;UAAAH,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OACV,CAAC;MAAA;QAAAH,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OACJ;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACS;EAAC;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACf,CAAC;AAEV;AAACX,EAAA,CAtCQD,GAAG;AAAAoB,EAAA,GAAHpB,GAAG;AAwCZ,eAAeA,GAAG;AAAC,IAAAoB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}